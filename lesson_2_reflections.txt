What happens when you initialize a repository? Why do you need to do it?
When you initalize a repository a .git file is added to the directory and the
files are NOT commited.  You need to do it so that the file history will be
tracked.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
The staging area isn't the working directory or the repository it is a middle
area.  It offers you space to put it until you commit.

How can you use the staging area to make sure you have one commit per logical
change?
You can use the staging area to compare a file to your working directory.

What are some situations when branches would be helpful in keeping your history
 organized? How would branches help?
 Branches help you keep a workable mode and you can have an experimental mode
 which gives you more freedom to explore possibilities.

 How do the diagrams help you visualize the branch structure?
 The branch structure seems crazy and endless.  Hard to wrap my head around.

 What is the result of merging two branches together? Why do we represent it in
  the diagram the way we do?
  The result is adding changes to the master and creating a new master.

  What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
   manually?
   You lose total control but Git seems to do a pretty good job merging and you
   get to judge the conflicts.  
